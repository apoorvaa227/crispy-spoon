(()=>{"use strict";var e={25:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),l=t(728),s=i()(o());s.i(l.Z),s.push([e.id,"/* FOOTER */\n.footer {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  padding: 10px;\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--header-text-color);\n  background-color: var(--theme-color);\n  font-family: var(--font-system);\n}\n\n.footer .fa-github {\n  color: var(--header-text-color);\n  font-size: 24px;\n  transition: transform 0.3s ease-in-out;\n}\n\n.footer .fa-github:hover {\n  transform: rotate(360deg) scale(1.2);\n}\n","",{version:3,sources:["webpack://./src/css/footer.css"],names:[],mappings:"AACA,WAAW;AACX;EACE,eAAe;EACf,SAAS;EACT,WAAW;EACX,aAAa;EACb,eAAe;EACf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,+BAA+B;EAC/B,oCAAoC;EACpC,+BAA+B;AACjC;;AAEA;EACE,+BAA+B;EAC/B,eAAe;EACf,sCAAsC;AACxC;;AAEA;EACE,oCAAoC;AACtC",sourcesContent:['@import "./variables.css";\n/* FOOTER */\n.footer {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  padding: 10px;\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--header-text-color);\n  background-color: var(--theme-color);\n  font-family: var(--font-system);\n}\n\n.footer .fa-github {\n  color: var(--header-text-color);\n  font-size: 24px;\n  transition: transform 0.3s ease-in-out;\n}\n\n.footer .fa-github:hover {\n  transform: rotate(360deg) scale(1.2);\n}\n'],sourceRoot:""}]);const A=s},568:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),l=t(728),s=i()(o());s.i(l.Z),s.push([e.id,'[class^="form-"] {\n  padding: 2rem;\n  color: var(--main-text-color);\n  display: flex;\n  flex-direction: column;\n}\n\n[class^="form-"] .form-header {\n  font-size: 2rem;\n  padding: 1rem;\n  text-align: center;\n}\n\n[class^="form-"] form {\n  overflow: hidden;\n  min-width: 250px;\n  max-width: 400px;\n  width: 100%;\n  align-self: center;\n  flex: 1;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n[class^="form-"] form div {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n}\n\n[class^="form-"] div.btns {\n  flex-direction: row;\n  justify-content: center;\n  align-self: flex-end;\n}\n\n[class^="form-"] div.btns button {\n  flex: 0;\n}\n\n[class^="form-"] label {\n  width: 100px;\n}\n\n[class^="form-"] input,\n[class^="form-"] textarea,\n[class^="form-"] select,\n[class^="form-"] div.btns button {\n  flex: 1;\n  padding: 0.5rem;\n  background-color: var(--theme-color);\n  border-radius: 4px;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n[class^="form-"] textarea {\n  resize: vertical;\n  max-height: 200px;\n}\n\n@media (max-width: 500px) {\n  [class^="form-"] form div {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  [class^="form-"] input,\n  [class^="form-"] textarea,\n  [class^="form-"] select {\n    width: 100%;\n  }\n}\n',"",{version:3,sources:["webpack://./src/css/form.css"],names:[],mappings:"AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,WAAW;EACX,kBAAkB;EAClB,OAAO;EACP,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,uBAAuB;EACvB,oBAAoB;AACtB;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,YAAY;AACd;;AAEA;;;;EAIE,OAAO;EACP,eAAe;EACf,oCAAoC;EACpC,kBAAkB;EAClB;IACE,0CAA0C;EAC5C;AACF;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE;IACE,sBAAsB;IACtB,uBAAuB;EACzB;EACA;;;IAGE,WAAW;EACb;AACF",sourcesContent:['@import "./variables.css";\n\n[class^="form-"] {\n  padding: 2rem;\n  color: var(--main-text-color);\n  display: flex;\n  flex-direction: column;\n}\n\n[class^="form-"] .form-header {\n  font-size: 2rem;\n  padding: 1rem;\n  text-align: center;\n}\n\n[class^="form-"] form {\n  overflow: hidden;\n  min-width: 250px;\n  max-width: 400px;\n  width: 100%;\n  align-self: center;\n  flex: 1;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n[class^="form-"] form div {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n}\n\n[class^="form-"] div.btns {\n  flex-direction: row;\n  justify-content: center;\n  align-self: flex-end;\n}\n\n[class^="form-"] div.btns button {\n  flex: 0;\n}\n\n[class^="form-"] label {\n  width: 100px;\n}\n\n[class^="form-"] input,\n[class^="form-"] textarea,\n[class^="form-"] select,\n[class^="form-"] div.btns button {\n  flex: 1;\n  padding: 0.5rem;\n  background-color: var(--theme-color);\n  border-radius: 4px;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n[class^="form-"] textarea {\n  resize: vertical;\n  max-height: 200px;\n}\n\n@media (max-width: 500px) {\n  [class^="form-"] form div {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  [class^="form-"] input,\n  [class^="form-"] textarea,\n  [class^="form-"] select {\n    width: 100%;\n  }\n}\n'],sourceRoot:""}]);const A=s},850:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),l=t(728),s=i()(o());s.i(l.Z),s.push([e.id,'.header {\n  position: fixed;\n  top: 0;\n  width: 100%;\n  background-color: var(--theme-color);\n  padding: 8px 16px;\n  display: flex;\n  justify-content: space-between;\n  z-index: 1;\n}\n\n.header [class^="nav-"] {\n  display: flex;\n  gap: 8px;\n}\n.header .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.header img {\n  filter: var(--filter);\n}\n\n/*Theme card*/\n\n.header .select-theme {\n  color: var(--header-text-color);\n  padding: 1rem;\n  position: absolute;\n  top: 50px;\n  right: 10px;\n  border-radius: 8px;\n  width: max-content;\n  opacity: 0;\n  visibility: hidden;\n  transition: 0.2s;\n  background-color: var(--theme-color);\n  &[data-open] {\n    opacity: 1;\n    visibility: visible;\n  }\n}\n\n.header .select-theme h2 {\n  font-size: 1.5rem;\n  margin: 0rem auto;\n}\n\n.header .select-theme label {\n  display: block;\n  padding: 8px;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n  &.active {\n    background-color: var(--theme-color-hover);\n  }\n}\n',"",{version:3,sources:["webpack://./src/css/header.css"],names:[],mappings:"AAEA;EACE,eAAe;EACf,MAAM;EACN,WAAW;EACX,oCAAoC;EACpC,iBAAiB;EACjB,aAAa;EACb,8BAA8B;EAC9B,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;AACA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf;IACE,0CAA0C;EAC5C;AACF;;AAEA;EACE,qBAAqB;AACvB;;AAEA,aAAa;;AAEb;EACE,+BAA+B;EAC/B,aAAa;EACb,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,kBAAkB;EAClB,kBAAkB;EAClB,UAAU;EACV,kBAAkB;EAClB,gBAAgB;EAChB,oCAAoC;EACpC;IACE,UAAU;IACV,mBAAmB;EACrB;AACF;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,cAAc;EACd,YAAY;EACZ;IACE,0CAA0C;EAC5C;EACA;IACE,0CAA0C;EAC5C;AACF",sourcesContent:['@import "./variables.css";\n\n.header {\n  position: fixed;\n  top: 0;\n  width: 100%;\n  background-color: var(--theme-color);\n  padding: 8px 16px;\n  display: flex;\n  justify-content: space-between;\n  z-index: 1;\n}\n\n.header [class^="nav-"] {\n  display: flex;\n  gap: 8px;\n}\n.header .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.header img {\n  filter: var(--filter);\n}\n\n/*Theme card*/\n\n.header .select-theme {\n  color: var(--header-text-color);\n  padding: 1rem;\n  position: absolute;\n  top: 50px;\n  right: 10px;\n  border-radius: 8px;\n  width: max-content;\n  opacity: 0;\n  visibility: hidden;\n  transition: 0.2s;\n  background-color: var(--theme-color);\n  &[data-open] {\n    opacity: 1;\n    visibility: visible;\n  }\n}\n\n.header .select-theme h2 {\n  font-size: 1.5rem;\n  margin: 0rem auto;\n}\n\n.header .select-theme label {\n  display: block;\n  padding: 8px;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n  &.active {\n    background-color: var(--theme-color-hover);\n  }\n}\n'],sourceRoot:""}]);const A=s},556:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),l=t(728),s=i()(o());s.i(l.Z),s.push([e.id,'body {\n  height: 100vh;\n}\n.main {\n  min-height: 100vh;\n  padding: 54px 0 54px;\n  background-color: var(--bg-color);\n  display: flex;\n  justify-content: center;\n}\n\n.sideMenu {\n  color: var(--header-text-color);\n  background-color: var(--theme-color);\n  height: calc(100% - 100px);\n  position: fixed;\n  padding: 1rem;\n  width: 220px;\n  top: 50px;\n  left: -220px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  transition: left 1s;\n  z-index: 1;\n}\n.sideMenu[data-open] {\n  left: 0;\n}\n\n.sideMenu [class^="box-"] {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.sideMenu .projects-header {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.5rem;\n  padding: 1rem;\n  cursor: pointer;\n}\n\n.sideMenu .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  filter: var(--filter);\n}\n\n#page {\n  min-height: calc(100% - 100px);\n  width: clamp(300px, 80%, 800px);\n  box-shadow: 0 0 4px 1px var(--theme-color);\n  border-radius: 4px;\n}\n',"",{version:3,sources:["webpack://./src/css/main.css"],names:[],mappings:"AAEA;EACE,aAAa;AACf;AACA;EACE,iBAAiB;EACjB,oBAAoB;EACpB,iCAAiC;EACjC,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,+BAA+B;EAC/B,oCAAoC;EACpC,0BAA0B;EAC1B,eAAe;EACf,aAAa;EACb,YAAY;EACZ,SAAS;EACT,YAAY;EACZ,4BAA4B;EAC5B,+BAA+B;EAC/B,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,UAAU;AACZ;AACA;EACE,OAAO;AACT;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,eAAe;EACf;IACE,0CAA0C;EAC5C;AACF;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,qBAAqB;AACvB;;AAEA;EACE,8BAA8B;EAC9B,+BAA+B;EAC/B,0CAA0C;EAC1C,kBAAkB;AACpB",sourcesContent:['@import "./variables.css";\n\nbody {\n  height: 100vh;\n}\n.main {\n  min-height: 100vh;\n  padding: 54px 0 54px;\n  background-color: var(--bg-color);\n  display: flex;\n  justify-content: center;\n}\n\n.sideMenu {\n  color: var(--header-text-color);\n  background-color: var(--theme-color);\n  height: calc(100% - 100px);\n  position: fixed;\n  padding: 1rem;\n  width: 220px;\n  top: 50px;\n  left: -220px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  transition: left 1s;\n  z-index: 1;\n}\n.sideMenu[data-open] {\n  left: 0;\n}\n\n.sideMenu [class^="box-"] {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.sideMenu .projects-header {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.5rem;\n  padding: 1rem;\n  cursor: pointer;\n}\n\n.sideMenu .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  filter: var(--filter);\n}\n\n#page {\n  min-height: calc(100% - 100px);\n  width: clamp(300px, 80%, 800px);\n  box-shadow: 0 0 4px 1px var(--theme-color);\n  border-radius: 4px;\n}\n'],sourceRoot:""}]);const A=s},999:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,'/*Task*/\n.task {\n  color: var(--main-text-color);\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem;\n  border: 2px solid var(--theme-color-hover);\n  border-radius: 8px;\n}\n\n.task.done {\n  .low::after,\n  .medium::after,\n  .high::after {\n    content: "";\n    display: block;\n    width: 40%;\n    height: 80%;\n    transform: translateX(75%) rotate(45deg);\n  }\n}\n\n.task-left {\n  display: flex;\n  flex-direction: column;\n}\n\n.task-right {\n  display: flex;\n  align-items: center;\n}\n\n.task-header span {\n  font-size: 1.5rem;\n  background: linear-gradient(\n    to right,\n    rgba(255, 0, 0, 1),\n    rgba(255, 0, 180, 1),\n    rgba(0, 100, 200, 1)\n  );\n  background-size: 0 2px;\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  transition: background-size 400ms;\n}\n\n.task.done .task-header span {\n  background-size: 100% 0.1em;\n}\n\n.task .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.today img {\n  filter: var(--filter);\n}\n\n.low,\n.medium,\n.high {\n  height: 100%;\n  border-radius: 50%;\n  &:hover::after {\n    content: "";\n    display: block;\n    width: 40%;\n    height: 80%;\n    transform: translateX(75%) rotate(45deg);\n  }\n}\n\n.low {\n  border: 2px solid var(--color-low-priority-border);\n  background-color: var(--color-low-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-low-priority-border);\n    border-bottom: 2px solid var(--color-low-priority-border);\n  }\n}\n\n.medium {\n  border: 2px solid var(--color-medium-priority-border);\n  background-color: var(--color-medium-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-medium-priority-border);\n    border-bottom: 2px solid var(--color-medium-priority-border);\n  }\n}\n\n.high {\n  border: 2px solid var(--color-high-priority-border);\n  background-color: var(--color-high-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-high-priority-border);\n    border-bottom: 2px solid var(--color-high-priority-border);\n  }\n}\n\n/* Today */\n.today {\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n',"",{version:3,sources:["webpack://./src/css/page.css"],names:[],mappings:"AAAA,OAAO;AACP;EACE,6BAA6B;EAC7B,aAAa;EACb,8BAA8B;EAC9B,eAAe;EACf,0CAA0C;EAC1C,kBAAkB;AACpB;;AAEA;EACE;;;IAGE,WAAW;IACX,cAAc;IACd,UAAU;IACV,WAAW;IACX,wCAAwC;EAC1C;AACF;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB;;;;;GAKC;EACD,sBAAsB;EACtB,0BAA0B;EAC1B,4BAA4B;EAC5B,iCAAiC;AACnC;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf;IACE,0CAA0C;EAC5C;AACF;;AAEA;EACE,qBAAqB;AACvB;;AAEA;;;EAGE,YAAY;EACZ,kBAAkB;EAClB;IACE,WAAW;IACX,cAAc;IACd,UAAU;IACV,WAAW;IACX,wCAAwC;EAC1C;AACF;;AAEA;EACE,kDAAkD;EAClD,8CAA8C;EAC9C;IACE,wDAAwD;IACxD,yDAAyD;EAC3D;AACF;;AAEA;EACE,qDAAqD;EACrD,iDAAiD;EACjD;IACE,2DAA2D;IAC3D,4DAA4D;EAC9D;AACF;;AAEA;EACE,mDAAmD;EACnD,+CAA+C;EAC/C;IACE,yDAAyD;IACzD,0DAA0D;EAC5D;AACF;;AAEA,UAAU;AACV;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX",sourcesContent:['/*Task*/\n.task {\n  color: var(--main-text-color);\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem;\n  border: 2px solid var(--theme-color-hover);\n  border-radius: 8px;\n}\n\n.task.done {\n  .low::after,\n  .medium::after,\n  .high::after {\n    content: "";\n    display: block;\n    width: 40%;\n    height: 80%;\n    transform: translateX(75%) rotate(45deg);\n  }\n}\n\n.task-left {\n  display: flex;\n  flex-direction: column;\n}\n\n.task-right {\n  display: flex;\n  align-items: center;\n}\n\n.task-header span {\n  font-size: 1.5rem;\n  background: linear-gradient(\n    to right,\n    rgba(255, 0, 0, 1),\n    rgba(255, 0, 180, 1),\n    rgba(0, 100, 200, 1)\n  );\n  background-size: 0 2px;\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  transition: background-size 400ms;\n}\n\n.task.done .task-header span {\n  background-size: 100% 0.1em;\n}\n\n.task .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.today img {\n  filter: var(--filter);\n}\n\n.low,\n.medium,\n.high {\n  height: 100%;\n  border-radius: 50%;\n  &:hover::after {\n    content: "";\n    display: block;\n    width: 40%;\n    height: 80%;\n    transform: translateX(75%) rotate(45deg);\n  }\n}\n\n.low {\n  border: 2px solid var(--color-low-priority-border);\n  background-color: var(--color-low-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-low-priority-border);\n    border-bottom: 2px solid var(--color-low-priority-border);\n  }\n}\n\n.medium {\n  border: 2px solid var(--color-medium-priority-border);\n  background-color: var(--color-medium-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-medium-priority-border);\n    border-bottom: 2px solid var(--color-medium-priority-border);\n  }\n}\n\n.high {\n  border: 2px solid var(--color-high-priority-border);\n  background-color: var(--color-high-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-high-priority-border);\n    border-bottom: 2px solid var(--color-high-priority-border);\n  }\n}\n\n/* Today */\n.today {\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n'],sourceRoot:""}]);const l=i},538:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"/*** The new CSS Reset - version 1.2.0 (last updated 23.7.2021) ***/\n\n/* Remove all the styles of the \"User-Agent-Stylesheet\", except for the 'display' property */\n*:where(:not(iframe, canvas, img, svg, video):not(svg *)) {\n  all: unset;\n  display: revert;\n}\n\n/* Preferred box-sizing value */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/*\n  Remove list styles (bullets/numbers)\n  in case you use it with normalize.css\n*/\nol,\nul {\n  list-style: none;\n}\n\n/* For images to not be able to exceed their container */\nimg {\n  max-width: 100%;\n}\n\n/* Removes spacing between cells in tables */\ntable {\n  border-collapse: collapse;\n}\n\n/* Revert the 'white-space' property for textarea elements on Safari */\ntextarea {\n  white-space: revert;\n}\n","",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA,mEAAmE;;AAEnE,4FAA4F;AAC5F;EACE,UAAU;EACV,eAAe;AACjB;;AAEA,+BAA+B;AAC/B;;;EAGE,sBAAsB;AACxB;;AAEA;;;CAGC;AACD;;EAEE,gBAAgB;AAClB;;AAEA,wDAAwD;AACxD;EACE,eAAe;AACjB;;AAEA,4CAA4C;AAC5C;EACE,yBAAyB;AAC3B;;AAEA,sEAAsE;AACtE;EACE,mBAAmB;AACrB",sourcesContent:["/*** The new CSS Reset - version 1.2.0 (last updated 23.7.2021) ***/\n\n/* Remove all the styles of the \"User-Agent-Stylesheet\", except for the 'display' property */\n*:where(:not(iframe, canvas, img, svg, video):not(svg *)) {\n  all: unset;\n  display: revert;\n}\n\n/* Preferred box-sizing value */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/*\n  Remove list styles (bullets/numbers)\n  in case you use it with normalize.css\n*/\nol,\nul {\n  list-style: none;\n}\n\n/* For images to not be able to exceed their container */\nimg {\n  max-width: 100%;\n}\n\n/* Removes spacing between cells in tables */\ntable {\n  border-collapse: collapse;\n}\n\n/* Revert the 'white-space' property for textarea elements on Safari */\ntextarea {\n  white-space: revert;\n}\n"],sourceRoot:""}]);const l=i},728:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,':root {\n  --font-system: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",\n    Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n  --color-low-priority-border: #2badd5;\n  --color-low-priority-bg: #5fdff8;\n  --color-medium-priority-border: #f89426;\n  --color-medium-priority-bg: #fcd86a;\n  --color-high-priority-border: #ff7171;\n  --color-high-priority-bg: #fea5b5;\n}\n\n:root.dark {\n  --header-text-color: #ffffff;\n  --main-text-color: #ffffff;\n  --bg-color: #1e1e1e;\n  --theme-color: #333333;\n  --theme-color-hover: #414141;\n  /* white svg */\n  --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n    brightness(105%) contrast(101%);\n}\n\n:root.light {\n  --header-text-color: #000000;\n  --main-text-color: #000000;\n  --bg-color: #ffffff;\n  --theme-color: #eeeeee;\n  --theme-color-hover: #dddddd;\n  /*Black svg*/\n  --filter: invert(0%) sepia(98%) saturate(25%) hue-rotate(4deg) brightness(91%)\n    contrast(100%);\n}\n\n:root.red {\n  --header-text-color: #ffffff;\n  --main-text-color: #000000;\n  --bg-color: #ffffff;\n  --theme-color: #dc4c3e;\n  --theme-color-hover: #b03d32;\n  /* white svg */\n  --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n    brightness(105%) contrast(101%);\n}\n\n@media (prefers-color-scheme: dark) {\n  :root.system {\n    --header-text-color: #ffffff;\n    --main-text-color: #ffffff;\n    --bg-color: #1e1e1e;\n    --theme-color: #333333;\n    --theme-color-hover: #414141;\n    /* white svg */\n    --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n      brightness(105%) contrast(101%);\n  }\n}\n@media (prefers-color-scheme: light) {\n  :root.system {\n    --header-text-color: #000000;\n    --main-text-color: #000000;\n    --bg-color: #ffffff;\n    --theme-color: #eeeeee;\n    --theme-color-hover: #dddddd;\n    /*Black svg*/\n    --filter: invert(0%) sepia(98%) saturate(25%) hue-rotate(4deg)\n      brightness(91%) contrast(100%);\n  }\n}\n',"",{version:3,sources:["webpack://./src/css/variables.css"],names:[],mappings:"AAAA;EACE;gFAC8E;EAC9E,oCAAoC;EACpC,gCAAgC;EAChC,uCAAuC;EACvC,mCAAmC;EACnC,qCAAqC;EACrC,iCAAiC;AACnC;;AAEA;EACE,4BAA4B;EAC5B,0BAA0B;EAC1B,mBAAmB;EACnB,sBAAsB;EACtB,4BAA4B;EAC5B,cAAc;EACd;mCACiC;AACnC;;AAEA;EACE,4BAA4B;EAC5B,0BAA0B;EAC1B,mBAAmB;EACnB,sBAAsB;EACtB,4BAA4B;EAC5B,YAAY;EACZ;kBACgB;AAClB;;AAEA;EACE,4BAA4B;EAC5B,0BAA0B;EAC1B,mBAAmB;EACnB,sBAAsB;EACtB,4BAA4B;EAC5B,cAAc;EACd;mCACiC;AACnC;;AAEA;EACE;IACE,4BAA4B;IAC5B,0BAA0B;IAC1B,mBAAmB;IACnB,sBAAsB;IACtB,4BAA4B;IAC5B,cAAc;IACd;qCACiC;EACnC;AACF;AACA;EACE;IACE,4BAA4B;IAC5B,0BAA0B;IAC1B,mBAAmB;IACnB,sBAAsB;IACtB,4BAA4B;IAC5B,YAAY;IACZ;oCACgC;EAClC;AACF",sourcesContent:[':root {\n  --font-system: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",\n    Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n  --color-low-priority-border: #2badd5;\n  --color-low-priority-bg: #5fdff8;\n  --color-medium-priority-border: #f89426;\n  --color-medium-priority-bg: #fcd86a;\n  --color-high-priority-border: #ff7171;\n  --color-high-priority-bg: #fea5b5;\n}\n\n:root.dark {\n  --header-text-color: #ffffff;\n  --main-text-color: #ffffff;\n  --bg-color: #1e1e1e;\n  --theme-color: #333333;\n  --theme-color-hover: #414141;\n  /* white svg */\n  --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n    brightness(105%) contrast(101%);\n}\n\n:root.light {\n  --header-text-color: #000000;\n  --main-text-color: #000000;\n  --bg-color: #ffffff;\n  --theme-color: #eeeeee;\n  --theme-color-hover: #dddddd;\n  /*Black svg*/\n  --filter: invert(0%) sepia(98%) saturate(25%) hue-rotate(4deg) brightness(91%)\n    contrast(100%);\n}\n\n:root.red {\n  --header-text-color: #ffffff;\n  --main-text-color: #000000;\n  --bg-color: #ffffff;\n  --theme-color: #dc4c3e;\n  --theme-color-hover: #b03d32;\n  /* white svg */\n  --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n    brightness(105%) contrast(101%);\n}\n\n@media (prefers-color-scheme: dark) {\n  :root.system {\n    --header-text-color: #ffffff;\n    --main-text-color: #ffffff;\n    --bg-color: #1e1e1e;\n    --theme-color: #333333;\n    --theme-color-hover: #414141;\n    /* white svg */\n    --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n      brightness(105%) contrast(101%);\n  }\n}\n@media (prefers-color-scheme: light) {\n  :root.system {\n    --header-text-color: #000000;\n    --main-text-color: #000000;\n    --bg-color: #ffffff;\n    --theme-color: #eeeeee;\n    --theme-color-hover: #dddddd;\n    /*Black svg*/\n    --filter: invert(0%) sepia(98%) saturate(25%) hue-rotate(4deg)\n      brightness(91%) contrast(100%);\n  }\n}\n'],sourceRoot:""}]);const l=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var A=0;A<e.length;A++){var c=[].concat(e[A]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],l=0;l<e.length;l++){var s=e[l],A=r.base?s[0]+r.base:s[0],c=a[A]||0,d="".concat(A," ").concat(c);a[A]=c+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,r);r.byIndex=l,n.splice(l,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var l=t(a[i]);n[l].references--}for(var s=r(e,o),A=0;A<a.length;A++){var c=t(a[A]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),l=t(565),s=t.n(l),A=t(216),c=t.n(A),d=t(589),u=t.n(d),p=t(538),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=c(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var f=t(728),h={};h.styleTagTransform=u(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=c(),n()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;var C=t(850),g={};g.styleTagTransform=u(),g.setAttributes=s(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=c(),n()(C.Z,g),C.Z&&C.Z.locals&&C.Z.locals;var E=t(556),v={};v.styleTagTransform=u(),v.setAttributes=s(),v.insert=i().bind(null,"head"),v.domAPI=o(),v.insertStyleElement=c(),n()(E.Z,v),E.Z&&E.Z.locals&&E.Z.locals;var b=t(999),B={};B.styleTagTransform=u(),B.setAttributes=s(),B.insert=i().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=c(),n()(b.Z,B),b.Z&&b.Z.locals&&b.Z.locals;var y=t(568),x={};x.styleTagTransform=u(),x.setAttributes=s(),x.insert=i().bind(null,"head"),x.domAPI=o(),x.insertStyleElement=c(),n()(y.Z,x),y.Z&&y.Z.locals&&y.Z.locals;var k=t(25),w={};function S(e,n,t,r,o){const a=document.createElement(e);return n&&(a.id=n),t&&t.forEach((e=>a.classList.add(e))),r&&(a.textContent=r),o&&o.forEach((e=>a.appendChild(e))),a}function I(e,n,t,r){const o=new Image;return e&&(o.src=e),n&&(o.alt=n),t&&t.forEach((e=>o.classList.add(e))),r&&r.forEach((e=>o.appendChild(e))),o}function j(){let e=document.querySelector(":root"),n="system";function t(e){const n=S("input",null,null,null,null);return n.setAttribute("type","radio"),n.setAttribute("name","theme"),n.setAttribute("value",e),S("label",null,null,e,[n])}return window.matchMedia("(prefers-color-scheme: dark)").matches,{updateTheme:function(t){document.querySelector(`[value="${n}"]`).parentElement.classList.remove("active"),e.className=t,n=t,document.querySelector(`[value="${n}"]`).parentElement.classList.add("active")},addThemesCard:function(){let e=[t("system"),t("dark"),t("light"),t("red")],n=S("h2",null,null,"Select Theme",null),r=S("div",null,null,null,null);e.forEach((e=>{r.appendChild(e)}));let o=S("div",null,["select-theme"],null,[n,r]);document.querySelector(".svg-colorPallete").parentElement.appendChild(o)},toggleThemeCard:function(){document.querySelector(".select-theme").toggleAttribute("data-open")}}}w.styleTagTransform=u(),w.setAttributes=s(),w.insert=i().bind(null,"head"),w.domAPI=o(),w.insertStyleElement=c(),n()(k.Z,w),k.Z&&k.Z.locals&&k.Z.locals;const T=t.p+"images/c51f08dd7631788bb763.svg",D=t.p+"images/172dd62834686206807d.svg",Z=t.p+"images/2c7dee90aec26a4ab0f9.svg",L=t.p+"images/92158d605c54a6aef63e.svg",P=t.p+"images/5b1f5a18664ddae6eb87.svg",q=t.p+"images/af20980ebf0d3eed9966.svg",M=t.p+"images/92158d605c54a6aef63e.svg",z=t.p+"images/b46110e5beab591b0e63.svg";let O=[],N=["home","work"],U=1;function F(){class e{constructor(e,n,t,r,o,a){this.id="task-"+U,++U,localStorage.setItem("nextID",U),this.title=e,this.details=t,this.project=n,this.dueDate=r,this.priority=o,this.done=a}}return{init:function(){localStorage.getItem("TaskList")?O=JSON.parse(localStorage.getItem("TaskList")):(O=[new e("Stay happy","home","This is a test project",(new Date).toDateString(),"high",!1)],localStorage.setItem("TaskList",JSON.stringify(O))),localStorage.getItem("ProjectList")?N=JSON.parse(localStorage.getItem("ProjectList")):localStorage.setItem("ProjectList",JSON.stringify(N)),localStorage.getItem("nextID")?U=localStorage.getItem("nextID"):localStorage.setItem("nextID",U)},Task:e,addTask:function(n,t,r,o,a,i){O.push(new e(n,t,r,o,a,i)),localStorage.setItem("TaskList",JSON.stringify(O))},addProject:function(e){N.push(e),localStorage.setItem("ProjectList",JSON.stringify(N))},hasProject:function(e){return!!N.some((n=>n==e))},deleteProject:function(e){N=N.filter((n=>n!=e)),localStorage.setItem("ProjectList",JSON.stringify(N))},deleteTaskById:function(e){O=O.filter((n=>n.id!=e)),localStorage.setItem("TaskList",JSON.stringify(O))},getTaskById:function(e){let n=0;return O.forEach(((t,r)=>{t.id==e&&(n=r)})),O[n]},updateTaskById:function(e){let n=0;O.forEach(((t,r)=>{t.id==e.id&&(n=r)})),O[n]=e,localStorage.setItem("TaskList",JSON.stringify(O))},getProjectList:function(){return N},getTaskListByDate:function(e){return O.filter((n=>n.dueDate==e))},getTaskListByProject:function(e){return O.filter((n=>n.project==e))}}}function Y(e){let n=F();function t(e,n,t){return S("button",null,["svgContainer"],null,[I(e,n,t,null)])}function r(e,n,t){let r=S("p",null,null,n,null);return S("div",null,t,null,[e,r])}return{createSideMenu:function(){let o=S("div",null,["top-div"],null,[r(t(q,"today icon",["svg-today"]),"Today",["box-today"]),r(t(M,"upcoming icon",["svg-upcoming"]),"Upcoming",["box-upcoming"])]),a=S("h2",null,["projects-header2"],"Projects",null),i=S("div",null,["projects-header"],null,[a,t(Z,"Add project",["svg-add-project"])]),l=n.getProjectList(),s=S("div",null,["bot-div"],null,null);l.forEach((e=>{s.appendChild(r(t(z,"Delete icon",["svg-delete"]),`${e}`,["box-"]))}));let A=S("div",null,["sideMenu"],null,[o,i,s]);e.appendChild(A)},toggleSideMenu:function(){document.querySelector(".sideMenu").toggleAttribute("data-open")},createPage:function(){e.appendChild(S("div","page",null,null,null))},updateProjects:function(){let e=n.getProjectList(),o=document.querySelector(".bot-div"),a=e[e.length-1],i=t(z,"Delete icon",["svg-delete"]);o.appendChild(r(i,a,["box-"]))},ShowUpcoming:function(){},ShowProject:function(e){}}}const W=t.p+"images/3ea4cf483224d228ffe4.svg";function R(e){let n=F();function t(e,n,t){return S("button",null,["svgContainer"],null,[I(e,n,t,null)])}return{display:function(){e.classList.add("today"),function(){let r=(new Date).toDateString();n.getTaskListByDate(r).forEach((r=>{e.appendChild(function(e){let r=S("span",null,null,e.title,null),o=S("p",null,["task-date"],`${new Date(e.dueDate).toDateString()}`,null),a=S("div",null,["task-priority"],null,null);a.classList.add(`${e.priority}`);let i=S("button",null,["svgContainer"],null,[a]);i.addEventListener("click",(()=>{let e=i.parentElement.parentElement;e.classList.toggle("done");let t=n.getTaskById(e.id);t.done=!t.done,n.updateTaskById(t)}));let l=t(W,"edit icon",["svg-edit"]);l.addEventListener("click",(()=>{alert("This feature is not yet implemented.")}));let s=t(z,"delete icon",["svg-delete"]);s.addEventListener("click",(()=>{let e=i.parentElement.parentElement;n.deleteTaskById(e.id),e.remove()}));let A=S("div",null,["task-left"],null,[S("div",null,["task-header"],null,[r]),o]),c=S("div",null,["task-right"],null,[i,l,s]),d=S("div",e.id,["task"],null,[A,c]);return e.done&&d.classList.add("done"),d}(r))}))}()},remove:function(){e.innerHTML="",e.className=""}}}function X(e){let n=F(),t=R(e),r=Y();function o(e){e.childNodes.forEach((e=>{"cancel"==e.id?e.addEventListener("click",(()=>{s()})):"clear"==e.id||"submit"==e.id&&e.addEventListener("click",(o=>{o.preventDefault();let a="todo"==(l=e.className)?{title:document.getElementById("title").value,project:document.getElementById("project").value,details:document.getElementById("details").value,dueDate:new Date(document.getElementById("dueDate").value).toDateString(),priority:document.getElementById("priority").value}:"project"==l?{project:document.getElementById("project").value}:void 0,i=function(e,t){return"todo"==t?"yes":"project"==t?n.hasProject(e.project)?"project":"yes":void 0}(a,e.className);var l;"yes"==i&&"todo"==e.className?(n.addTask(a.title,a.project,a.details,a.dueDate,a.priority,!1),t.remove(),t.display()):"yes"==i&&"project"==e.className?(n.addProject(a.project),r.updateProjects(),t.remove(),t.display()):function(e){alert(`${e} is invalid.`)}(i)}))}))}function a(e){let n=S("button","cancel",[e],"Cancel",null);n.setAttribute("type","button");let t=S("button","clear",[e],"Clear",null);t.setAttribute("type","reset");let r=S("button","submit",[e],"Add",null);return r.setAttribute("type","submit"),S("div",null,["btns"],null,[n,t,r])}function i(e,n,t,r,o,a){let i=S("label",null,null,o,null);i.setAttribute("for",n);let l=S(e,n,null,null,a);return r&&l.toggleAttribute("required"),t&&l.setAttribute("type",t),S("div",null,[n],null,[i,l])}function l(e){let n=S("option",null,null,`${e.charAt(0).toUpperCase()}${e.slice(1)}`,null);return n.setAttribute("value",e),"low"==e&&n.toggleAttribute("selected"),n}function s(){e.innerHTML="",e.className=""}return{displayToDo:function(){e.className="form-todo",function(){e.appendChild(S("h2",null,["form-header"],"Add a new todo",null));let n=a("todo");o(n);let t=S("form",null,null,null,[i("input","title","text",!0,"Title:",null),i("input","project","text",!0,"Project:",null),i("textarea","details",null,!1,"Details:",null),i("input","dueDate","date",!1,"Due Date:",null),i("select","priority",null,!1,"Priority:",[l("low"),l("medium"),l("high")]),n]);e.appendChild(t)}()},displayProject:function(){e.className="form-project",function(){e.appendChild(S("h2",null,["form-header"],"Add a new Project",null));let n=a("project");o(n);let t=S("form",null,null,null,[i("input","project","text",!0,"Project:",null),n]);e.appendChild(t)}()},remove:s}}function J(){let e=j(),n=Y();return{addListners:function(){document.querySelector(".svg-hamburger").parentElement.addEventListener("click",(()=>{n.toggleSideMenu()})),document.querySelector(".svg-home").parentElement.addEventListener("click",(()=>{let e=R(document.querySelector("#page"));e.remove(),e.display()})),document.querySelector(".svg-add").parentElement.addEventListener("click",(()=>{let e=X(document.querySelector("#page"));e.remove(),e.displayToDo()})),document.querySelector(".svg-calendar-header").parentElement.addEventListener("click",(()=>{alert("This feature is not yet Implemented")})),document.querySelector(".svg-colorPallete").parentElement.addEventListener("click",(()=>{e.toggleThemeCard()})),[...document.querySelectorAll(".select-theme input")].forEach((n=>{n.addEventListener("click",(n=>{e.updateTheme(n.target.value),e.toggleThemeCard()}))})),document.querySelector(".box-today").addEventListener("click",(()=>{let e=R(document.querySelector("#page"));e.remove(),e.display(),n.toggleSideMenu()})),document.querySelector(".box-upcoming").addEventListener("click",(()=>{alert("This feature is not yet Implemented")})),document.querySelector(".projects-header").addEventListener("click",(()=>{let e=X(document.querySelector("#page"));e.remove(),e.displayProject(),n.toggleSideMenu()})),[...document.querySelector(".bot-div").querySelectorAll('[class^="box-"]')].forEach((e=>{!function(e){e.addEventListener("click",(()=>{console.log(e.className.slice(4)),alert("This feature is not yet Implemented")}))}(e)}))}}}(()=>{F().init();const e=document.querySelector(".header"),n=document.querySelector(".main"),t=document.querySelector(".footer");let r=function(e){let n=[r(T,"hamburger icon",["svg-hamburger"]),r(D,"home icon",["svg-home"])],t=[r(Z,"add icon",["svg-add"]),r(L,"calendar icon",["svg-calendar-header"]),r(P,"theme icon",["svg-colorPallete"])];function r(e,n,t){return S("button",null,["svgContainer"],null,[I(e,n,t,null)])}return{display:function(){const r=S("div",null,["nav-left"],null,null);n.forEach((e=>{r.appendChild(e)}));const o=S("div",null,["nav-right"],null,null);t.forEach((e=>{o.appendChild(e)})),e.appendChild(r),e.appendChild(o)},remove:function(){}}}(e),o=j(),a=function(e){return{display:function(){e.innerHTML='<p>Copyright &copy;<script>document.write(new Date().getFullYear());<\/script>argon-3467<a href="https://github.com/argon-3467"><i class="fa-brands fa-github"></i></a></p>'},remove:function(){document.querySelector(".footer").remove()}}}(t),i=Y(n),l=J();r.display(),i.createSideMenu(),i.createPage(),R(document.getElementById("page")).display(),o.addThemesCard(),a.display(),o.updateTheme("system"),l.addListners()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,