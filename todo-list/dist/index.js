(()=>{"use strict";var e={25:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),l=t(728),A=a()(o());A.i(l.Z),A.push([e.id,"/* FOOTER */\n.footer {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  padding: 10px;\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--header-text-color);\n  background-color: var(--theme-color);\n  font-family: var(--font-system);\n}\n\n.footer .fa-github {\n  color: var(--header-text-color);\n  font-size: 24px;\n  transition: transform 0.3s ease-in-out;\n}\n\n.footer .fa-github:hover {\n  transform: rotate(360deg) scale(1.2);\n}\n","",{version:3,sources:["webpack://./src/css/footer.css"],names:[],mappings:"AACA,WAAW;AACX;EACE,eAAe;EACf,SAAS;EACT,WAAW;EACX,aAAa;EACb,eAAe;EACf,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,+BAA+B;EAC/B,oCAAoC;EACpC,+BAA+B;AACjC;;AAEA;EACE,+BAA+B;EAC/B,eAAe;EACf,sCAAsC;AACxC;;AAEA;EACE,oCAAoC;AACtC",sourcesContent:['@import "./variables.css";\n/* FOOTER */\n.footer {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  padding: 10px;\n  font-size: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--header-text-color);\n  background-color: var(--theme-color);\n  font-family: var(--font-system);\n}\n\n.footer .fa-github {\n  color: var(--header-text-color);\n  font-size: 24px;\n  transition: transform 0.3s ease-in-out;\n}\n\n.footer .fa-github:hover {\n  transform: rotate(360deg) scale(1.2);\n}\n'],sourceRoot:""}]);const s=A},568:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),l=t(728),A=a()(o());A.i(l.Z),A.push([e.id,'[class^="form-"] {\n  padding: 2rem;\n  color: var(--main-text-color);\n  display: flex;\n  flex-direction: column;\n}\n\n[class^="form-"] .form-header {\n  font-size: 2rem;\n  padding: 1rem;\n  text-align: center;\n}\n\n[class^="form-"] form {\n  overflow: hidden;\n  min-width: 250px;\n  max-width: 400px;\n  width: 100%;\n  align-self: center;\n  flex: 1;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n[class^="form-"] form div {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n}\n\n[class^="form-"] div.btns {\n  flex-direction: row;\n  justify-content: center;\n  align-self: flex-end;\n}\n\n[class^="form-"] div.btns button {\n  flex: 0;\n}\n\n[class^="form-"] label {\n  width: 100px;\n}\n\n[class^="form-"] input,\n[class^="form-"] textarea,\n[class^="form-"] select,\n[class^="form-"] div.btns button {\n  flex: 1;\n  padding: 0.5rem;\n  background-color: var(--theme-color);\n  border-radius: 4px;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n[class^="form-"] textarea {\n  resize: vertical;\n  max-height: 200px;\n}\n\n@media (max-width: 500px) {\n  [class^="form-"] form div {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  [class^="form-"] input,\n  [class^="form-"] textarea,\n  [class^="form-"] select {\n    width: 100%;\n  }\n}\n',"",{version:3,sources:["webpack://./src/css/form.css"],names:[],mappings:"AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,WAAW;EACX,kBAAkB;EAClB,OAAO;EACP,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,uBAAuB;EACvB,oBAAoB;AACtB;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,YAAY;AACd;;AAEA;;;;EAIE,OAAO;EACP,eAAe;EACf,oCAAoC;EACpC,kBAAkB;EAClB;IACE,0CAA0C;EAC5C;AACF;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE;IACE,sBAAsB;IACtB,uBAAuB;EACzB;EACA;;;IAGE,WAAW;EACb;AACF",sourcesContent:['@import "./variables.css";\n\n[class^="form-"] {\n  padding: 2rem;\n  color: var(--main-text-color);\n  display: flex;\n  flex-direction: column;\n}\n\n[class^="form-"] .form-header {\n  font-size: 2rem;\n  padding: 1rem;\n  text-align: center;\n}\n\n[class^="form-"] form {\n  overflow: hidden;\n  min-width: 250px;\n  max-width: 400px;\n  width: 100%;\n  align-self: center;\n  flex: 1;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n[class^="form-"] form div {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n}\n\n[class^="form-"] div.btns {\n  flex-direction: row;\n  justify-content: center;\n  align-self: flex-end;\n}\n\n[class^="form-"] div.btns button {\n  flex: 0;\n}\n\n[class^="form-"] label {\n  width: 100px;\n}\n\n[class^="form-"] input,\n[class^="form-"] textarea,\n[class^="form-"] select,\n[class^="form-"] div.btns button {\n  flex: 1;\n  padding: 0.5rem;\n  background-color: var(--theme-color);\n  border-radius: 4px;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n[class^="form-"] textarea {\n  resize: vertical;\n  max-height: 200px;\n}\n\n@media (max-width: 500px) {\n  [class^="form-"] form div {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  [class^="form-"] input,\n  [class^="form-"] textarea,\n  [class^="form-"] select {\n    width: 100%;\n  }\n}\n'],sourceRoot:""}]);const s=A},850:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),l=t(728),A=a()(o());A.i(l.Z),A.push([e.id,'.header {\n  position: fixed;\n  top: 0;\n  width: 100%;\n  background-color: var(--theme-color);\n  padding: 8px 16px;\n  display: flex;\n  justify-content: space-between;\n}\n\n[class^="nav-"] {\n  display: flex;\n  gap: 8px;\n}\n.header .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.header .svgContainer {\n  filter: var(--filter);\n}\n\n/*Theme card*/\n\n.select-theme {\n  color: var(--header-text-color);\n  padding: 1rem;\n  position: absolute;\n  top: 50px;\n  right: 10px;\n  border-radius: 8px;\n  width: max-content;\n  opacity: 0;\n  visibility: hidden;\n  transition: 0.2s;\n  background-color: var(--theme-color);\n  &[data-open] {\n    opacity: 1;\n    visibility: visible;\n  }\n  z-index: 2;\n}\n\n.select-theme h2 {\n  font-size: 1.5rem;\n  margin: 0rem auto;\n}\n\n.select-theme label {\n  display: block;\n  padding: 8px;\n  &:hover,\n  &.active {\n    background-color: var(--theme-color-hover);\n  }\n}\n',"",{version:3,sources:["webpack://./src/css/header.css"],names:[],mappings:"AAEA;EACE,eAAe;EACf,MAAM;EACN,WAAW;EACX,oCAAoC;EACpC,iBAAiB;EACjB,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;AACA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf;IACE,0CAA0C;EAC5C;AACF;;AAEA;EACE,qBAAqB;AACvB;;AAEA,aAAa;;AAEb;EACE,+BAA+B;EAC/B,aAAa;EACb,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,kBAAkB;EAClB,kBAAkB;EAClB,UAAU;EACV,kBAAkB;EAClB,gBAAgB;EAChB,oCAAoC;EACpC;IACE,UAAU;IACV,mBAAmB;EACrB;EACA,UAAU;AACZ;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,cAAc;EACd,YAAY;EACZ;;IAEE,0CAA0C;EAC5C;AACF",sourcesContent:['@import "./variables.css";\n\n.header {\n  position: fixed;\n  top: 0;\n  width: 100%;\n  background-color: var(--theme-color);\n  padding: 8px 16px;\n  display: flex;\n  justify-content: space-between;\n}\n\n[class^="nav-"] {\n  display: flex;\n  gap: 8px;\n}\n.header .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.header .svgContainer {\n  filter: var(--filter);\n}\n\n/*Theme card*/\n\n.select-theme {\n  color: var(--header-text-color);\n  padding: 1rem;\n  position: absolute;\n  top: 50px;\n  right: 10px;\n  border-radius: 8px;\n  width: max-content;\n  opacity: 0;\n  visibility: hidden;\n  transition: 0.2s;\n  background-color: var(--theme-color);\n  &[data-open] {\n    opacity: 1;\n    visibility: visible;\n  }\n  z-index: 2;\n}\n\n.select-theme h2 {\n  font-size: 1.5rem;\n  margin: 0rem auto;\n}\n\n.select-theme label {\n  display: block;\n  padding: 8px;\n  &:hover,\n  &.active {\n    background-color: var(--theme-color-hover);\n  }\n}\n'],sourceRoot:""}]);const s=A},556:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),l=t(728),A=a()(o());A.i(l.Z),A.push([e.id,'body {\n  height: 100vh;\n}\n.main {\n  height: 100vh;\n  background-color: var(--bg-color);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.sideMenu {\n  color: var(--header-text-color);\n  background-color: var(--theme-color);\n  height: calc(100% - 100px);\n  position: fixed;\n  padding: 1rem;\n  width: 220px;\n  top: 50px;\n  left: -220px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  transition: left 1s;\n}\n.sideMenu[data-open] {\n  left: 0;\n}\n\n.sideMenu [class^="box-"] {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.sideMenu .projects-header {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.5rem;\n  padding: 1rem;\n  cursor: pointer;\n}\n\n.sideMenu .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  filter: var(--filter);\n}\n\n#page {\n  height: calc(100% - 100px);\n  width: clamp(300px, 80%, 800px);\n  box-shadow: 0 0 4px 1px var(--theme-color);\n  border-radius: 4px;\n}\n',"",{version:3,sources:["webpack://./src/css/main.css"],names:[],mappings:"AAEA;EACE,aAAa;AACf;AACA;EACE,aAAa;EACb,iCAAiC;EACjC,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,+BAA+B;EAC/B,oCAAoC;EACpC,0BAA0B;EAC1B,eAAe;EACf,aAAa;EACb,YAAY;EACZ,SAAS;EACT,YAAY;EACZ,4BAA4B;EAC5B,+BAA+B;EAC/B,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;AACA;EACE,OAAO;AACT;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,eAAe;EACf;IACE,0CAA0C;EAC5C;AACF;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,qBAAqB;AACvB;;AAEA;EACE,0BAA0B;EAC1B,+BAA+B;EAC/B,0CAA0C;EAC1C,kBAAkB;AACpB",sourcesContent:['@import "./variables.css";\n\nbody {\n  height: 100vh;\n}\n.main {\n  height: 100vh;\n  background-color: var(--bg-color);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.sideMenu {\n  color: var(--header-text-color);\n  background-color: var(--theme-color);\n  height: calc(100% - 100px);\n  position: fixed;\n  padding: 1rem;\n  width: 220px;\n  top: 50px;\n  left: -220px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  transition: left 1s;\n}\n.sideMenu[data-open] {\n  left: 0;\n}\n\n.sideMenu [class^="box-"] {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.sideMenu .projects-header {\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.5rem;\n  padding: 1rem;\n  cursor: pointer;\n}\n\n.sideMenu .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  filter: var(--filter);\n}\n\n#page {\n  height: calc(100% - 100px);\n  width: clamp(300px, 80%, 800px);\n  box-shadow: 0 0 4px 1px var(--theme-color);\n  border-radius: 4px;\n}\n'],sourceRoot:""}]);const s=A},999:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,'/*Task*/\n.task {\n  color: var(--main-text-color);\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem;\n  border: 2px solid var(--theme-color-hover);\n  border-radius: 8px;\n}\n\n.task-left {\n  display: flex;\n  flex-direction: column;\n}\n\n.task-right {\n  display: flex;\n  align-items: center;\n}\n\n.task-header {\n  font-size: 1.5rem;\n}\n\n.task .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.svgContainer:not(:first-child) {\n  filter: var(--filter);\n}\n\n.low,\n.medium,\n.high {\n  height: 100%;\n  border-radius: 50%;\n  &:hover::after {\n    content: "";\n    display: block;\n    width: 40%;\n    height: 80%;\n    transform: translateX(80%) rotate(45deg);\n  }\n}\n\n.low {\n  border: 2px solid var(--color-low-priority-border);\n  background-color: var(--color-low-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-low-priority-border);\n    border-bottom: 2px solid var(--color-low-priority-border);\n  }\n}\n\n.medium {\n  border: 2px solid var(--color-medium-priority-border);\n  background-color: var(--color-medium-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-medium-priority-border);\n    border-bottom: 2px solid var(--color-medium-priority-border);\n  }\n}\n\n.high {\n  border: 2px solid var(--color-high-priority-border);\n  background-color: var(--color-high-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-high-priority-border);\n    border-bottom: 2px solid var(--color-high-priority-border);\n  }\n}\n\n/* Today */\n.today {\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n',"",{version:3,sources:["webpack://./src/css/page.css"],names:[],mappings:"AAAA,OAAO;AACP;EACE,6BAA6B;EAC7B,aAAa;EACb,8BAA8B;EAC9B,eAAe;EACf,0CAA0C;EAC1C,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf;IACE,0CAA0C;EAC5C;AACF;;AAEA;EACE,qBAAqB;AACvB;;AAEA;;;EAGE,YAAY;EACZ,kBAAkB;EAClB;IACE,WAAW;IACX,cAAc;IACd,UAAU;IACV,WAAW;IACX,wCAAwC;EAC1C;AACF;;AAEA;EACE,kDAAkD;EAClD,8CAA8C;EAC9C;IACE,wDAAwD;IACxD,yDAAyD;EAC3D;AACF;;AAEA;EACE,qDAAqD;EACrD,iDAAiD;EACjD;IACE,2DAA2D;IAC3D,4DAA4D;EAC9D;AACF;;AAEA;EACE,mDAAmD;EACnD,+CAA+C;EAC/C;IACE,yDAAyD;IACzD,0DAA0D;EAC5D;AACF;;AAEA,UAAU;AACV;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX",sourcesContent:['/*Task*/\n.task {\n  color: var(--main-text-color);\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem;\n  border: 2px solid var(--theme-color-hover);\n  border-radius: 8px;\n}\n\n.task-left {\n  display: flex;\n  flex-direction: column;\n}\n\n.task-right {\n  display: flex;\n  align-items: center;\n}\n\n.task-header {\n  font-size: 1.5rem;\n}\n\n.task .svgContainer {\n  height: 30px;\n  width: 30px;\n  padding: 4px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--theme-color-hover);\n  }\n}\n\n.svgContainer:not(:first-child) {\n  filter: var(--filter);\n}\n\n.low,\n.medium,\n.high {\n  height: 100%;\n  border-radius: 50%;\n  &:hover::after {\n    content: "";\n    display: block;\n    width: 40%;\n    height: 80%;\n    transform: translateX(80%) rotate(45deg);\n  }\n}\n\n.low {\n  border: 2px solid var(--color-low-priority-border);\n  background-color: var(--color-low-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-low-priority-border);\n    border-bottom: 2px solid var(--color-low-priority-border);\n  }\n}\n\n.medium {\n  border: 2px solid var(--color-medium-priority-border);\n  background-color: var(--color-medium-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-medium-priority-border);\n    border-bottom: 2px solid var(--color-medium-priority-border);\n  }\n}\n\n.high {\n  border: 2px solid var(--color-high-priority-border);\n  background-color: var(--color-high-priority-bg);\n  &::after {\n    border-right: 2px solid var(--color-high-priority-border);\n    border-bottom: 2px solid var(--color-high-priority-border);\n  }\n}\n\n/* Today */\n.today {\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n'],sourceRoot:""}]);const l=a},538:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,"/*** The new CSS Reset - version 1.2.0 (last updated 23.7.2021) ***/\n\n/* Remove all the styles of the \"User-Agent-Stylesheet\", except for the 'display' property */\n*:where(:not(iframe, canvas, img, svg, video):not(svg *)) {\n  all: unset;\n  display: revert;\n}\n\n/* Preferred box-sizing value */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/*\n  Remove list styles (bullets/numbers)\n  in case you use it with normalize.css\n*/\nol,\nul {\n  list-style: none;\n}\n\n/* For images to not be able to exceed their container */\nimg {\n  max-width: 100%;\n}\n\n/* Removes spacing between cells in tables */\ntable {\n  border-collapse: collapse;\n}\n\n/* Revert the 'white-space' property for textarea elements on Safari */\ntextarea {\n  white-space: revert;\n}\n","",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA,mEAAmE;;AAEnE,4FAA4F;AAC5F;EACE,UAAU;EACV,eAAe;AACjB;;AAEA,+BAA+B;AAC/B;;;EAGE,sBAAsB;AACxB;;AAEA;;;CAGC;AACD;;EAEE,gBAAgB;AAClB;;AAEA,wDAAwD;AACxD;EACE,eAAe;AACjB;;AAEA,4CAA4C;AAC5C;EACE,yBAAyB;AAC3B;;AAEA,sEAAsE;AACtE;EACE,mBAAmB;AACrB",sourcesContent:["/*** The new CSS Reset - version 1.2.0 (last updated 23.7.2021) ***/\n\n/* Remove all the styles of the \"User-Agent-Stylesheet\", except for the 'display' property */\n*:where(:not(iframe, canvas, img, svg, video):not(svg *)) {\n  all: unset;\n  display: revert;\n}\n\n/* Preferred box-sizing value */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/*\n  Remove list styles (bullets/numbers)\n  in case you use it with normalize.css\n*/\nol,\nul {\n  list-style: none;\n}\n\n/* For images to not be able to exceed their container */\nimg {\n  max-width: 100%;\n}\n\n/* Removes spacing between cells in tables */\ntable {\n  border-collapse: collapse;\n}\n\n/* Revert the 'white-space' property for textarea elements on Safari */\ntextarea {\n  white-space: revert;\n}\n"],sourceRoot:""}]);const l=a},728:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,':root {\n  --font-system: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",\n    Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n  --color-low-priority-border: #2badd5;\n  --color-low-priority-bg: #5fdff8;\n  --color-medium-priority-border: #f89426;\n  --color-medium-priority-bg: #fcd86a;\n  --color-high-priority-border: #ff7171;\n  --color-high-priority-bg: #fea5b5;\n}\n\n:root.dark {\n  --header-text-color: #ffffff;\n  --main-text-color: #ffffff;\n  --bg-color: #1e1e1e;\n  --theme-color: #333333;\n  --theme-color-hover: #414141;\n  /* white svg */\n  --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n    brightness(105%) contrast(101%);\n}\n\n:root.light {\n  --header-text-color: #000000;\n  --main-text-color: #000000;\n  --bg-color: #ffffff;\n  --theme-color: #eeeeee;\n  --theme-color-hover: #dddddd;\n  /*Black svg*/\n  --filter: invert(0%) sepia(98%) saturate(25%) hue-rotate(4deg) brightness(91%)\n    contrast(100%);\n}\n\n:root.red {\n  --header-text-color: #ffffff;\n  --main-text-color: #000000;\n  --bg-color: #ffffff;\n  --theme-color: #dc4c3e;\n  --theme-color-hover: #b03d32;\n  /* white svg */\n  --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n    brightness(105%) contrast(101%);\n}\n\n@media (prefers-color-scheme: dark) {\n  :root.system {\n    --header-text-color: #ffffff;\n    --main-text-color: #ffffff;\n    --bg-color: #1e1e1e;\n    --theme-color: #333333;\n    --theme-color-hover: #414141;\n    /* white svg */\n    --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n      brightness(105%) contrast(101%);\n  }\n}\n@media (prefers-color-scheme: light) {\n  :root.system {\n    --header-text-color: #000000;\n    --main-text-color: #000000;\n    --bg-color: #ffffff;\n    --theme-color: #eeeeee;\n    --theme-color-hover: #dddddd;\n    /*Black svg*/\n    --filter: invert(0%) sepia(98%) saturate(25%) hue-rotate(4deg)\n      brightness(91%) contrast(100%);\n  }\n}\n',"",{version:3,sources:["webpack://./src/css/variables.css"],names:[],mappings:"AAAA;EACE;gFAC8E;EAC9E,oCAAoC;EACpC,gCAAgC;EAChC,uCAAuC;EACvC,mCAAmC;EACnC,qCAAqC;EACrC,iCAAiC;AACnC;;AAEA;EACE,4BAA4B;EAC5B,0BAA0B;EAC1B,mBAAmB;EACnB,sBAAsB;EACtB,4BAA4B;EAC5B,cAAc;EACd;mCACiC;AACnC;;AAEA;EACE,4BAA4B;EAC5B,0BAA0B;EAC1B,mBAAmB;EACnB,sBAAsB;EACtB,4BAA4B;EAC5B,YAAY;EACZ;kBACgB;AAClB;;AAEA;EACE,4BAA4B;EAC5B,0BAA0B;EAC1B,mBAAmB;EACnB,sBAAsB;EACtB,4BAA4B;EAC5B,cAAc;EACd;mCACiC;AACnC;;AAEA;EACE;IACE,4BAA4B;IAC5B,0BAA0B;IAC1B,mBAAmB;IACnB,sBAAsB;IACtB,4BAA4B;IAC5B,cAAc;IACd;qCACiC;EACnC;AACF;AACA;EACE;IACE,4BAA4B;IAC5B,0BAA0B;IAC1B,mBAAmB;IACnB,sBAAsB;IACtB,4BAA4B;IAC5B,YAAY;IACZ;oCACgC;EAClC;AACF",sourcesContent:[':root {\n  --font-system: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",\n    Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n  --color-low-priority-border: #2badd5;\n  --color-low-priority-bg: #5fdff8;\n  --color-medium-priority-border: #f89426;\n  --color-medium-priority-bg: #fcd86a;\n  --color-high-priority-border: #ff7171;\n  --color-high-priority-bg: #fea5b5;\n}\n\n:root.dark {\n  --header-text-color: #ffffff;\n  --main-text-color: #ffffff;\n  --bg-color: #1e1e1e;\n  --theme-color: #333333;\n  --theme-color-hover: #414141;\n  /* white svg */\n  --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n    brightness(105%) contrast(101%);\n}\n\n:root.light {\n  --header-text-color: #000000;\n  --main-text-color: #000000;\n  --bg-color: #ffffff;\n  --theme-color: #eeeeee;\n  --theme-color-hover: #dddddd;\n  /*Black svg*/\n  --filter: invert(0%) sepia(98%) saturate(25%) hue-rotate(4deg) brightness(91%)\n    contrast(100%);\n}\n\n:root.red {\n  --header-text-color: #ffffff;\n  --main-text-color: #000000;\n  --bg-color: #ffffff;\n  --theme-color: #dc4c3e;\n  --theme-color-hover: #b03d32;\n  /* white svg */\n  --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n    brightness(105%) contrast(101%);\n}\n\n@media (prefers-color-scheme: dark) {\n  :root.system {\n    --header-text-color: #ffffff;\n    --main-text-color: #ffffff;\n    --bg-color: #1e1e1e;\n    --theme-color: #333333;\n    --theme-color-hover: #414141;\n    /* white svg */\n    --filter: invert(100%) sepia(88%) saturate(0%) hue-rotate(104deg)\n      brightness(105%) contrast(101%);\n  }\n}\n@media (prefers-color-scheme: light) {\n  :root.system {\n    --header-text-color: #000000;\n    --main-text-color: #000000;\n    --bg-color: #ffffff;\n    --theme-color: #eeeeee;\n    --theme-color-hover: #dddddd;\n    /*Black svg*/\n    --filter: invert(0%) sepia(98%) saturate(25%) hue-rotate(4deg)\n      brightness(91%) contrast(100%);\n  }\n}\n'],sourceRoot:""}]);const l=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var l=0;l<this.length;l++){var A=this[l][0];null!=A&&(a[A]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],l=0;l<e.length;l++){var A=e[l],s=r.base?A[0]+r.base:A[0],c=i[s]||0,d="".concat(s," ").concat(c);i[s]=c+1;var u=t(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=o(p,r);r.byIndex=l,n.splice(l,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var l=t(i[a]);n[l].references--}for(var A=r(e,o),s=0;s<i.length;s++){var c=t(i[s]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}i=A}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),l=t(565),A=t.n(l),s=t(216),c=t.n(s),d=t(589),u=t.n(d),p=t(538),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=c(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var f=t(728),h={};h.styleTagTransform=u(),h.setAttributes=A(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=c(),n()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;var C=t(850),g={};g.styleTagTransform=u(),g.setAttributes=A(),g.insert=a().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=c(),n()(C.Z,g),C.Z&&C.Z.locals&&C.Z.locals;var E=t(556),v={};v.styleTagTransform=u(),v.setAttributes=A(),v.insert=a().bind(null,"head"),v.domAPI=o(),v.insertStyleElement=c(),n()(E.Z,v),E.Z&&E.Z.locals&&E.Z.locals;var b=t(999),B={};B.styleTagTransform=u(),B.setAttributes=A(),B.insert=a().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=c(),n()(b.Z,B),b.Z&&b.Z.locals&&b.Z.locals;var x=t(568),y={};y.styleTagTransform=u(),y.setAttributes=A(),y.insert=a().bind(null,"head"),y.domAPI=o(),y.insertStyleElement=c(),n()(x.Z,y),x.Z&&x.Z.locals&&x.Z.locals;var w=t(25),k={};function S(e,n,t,r,o){const i=document.createElement(e);return n&&(i.id=n),t&&t.forEach((e=>i.classList.add(e))),r&&(i.textContent=r),o&&o.forEach((e=>i.appendChild(e))),i}function T(e,n,t,r){const o=new Image;return e&&(o.src=e),n&&(o.alt=n),t&&t.forEach((e=>o.classList.add(e))),r&&r.forEach((e=>o.appendChild(e))),o}function I(){let e=document.querySelector(":root"),n="system";function t(e){const n=S("input",null,null,null,null);return n.setAttribute("type","radio"),n.setAttribute("name","theme"),n.setAttribute("value",e),S("label",null,null,e,[n])}return window.matchMedia("(prefers-color-scheme: dark)").matches,{updateTheme:function(t){document.querySelector(`[value="${n}"]`).parentElement.classList.remove("active"),e.className=t,n=t,document.querySelector(`[value="${n}"]`).parentElement.classList.add("active")},addThemesCard:function(){let e=[t("system"),t("dark"),t("light"),t("red")],n=S("h2",null,null,"Select Theme",null),r=S("div",null,null,null,null);e.forEach((e=>{r.appendChild(e)}));let o=S("div",null,["select-theme"],null,[n,r]);document.querySelector(".svg-colorPallete").parentElement.appendChild(o)},toggleThemeCard:function(){document.querySelector(".select-theme").toggleAttribute("data-open")}}}k.styleTagTransform=u(),k.setAttributes=A(),k.insert=a().bind(null,"head"),k.domAPI=o(),k.insertStyleElement=c(),n()(w.Z,k),w.Z&&w.Z.locals&&w.Z.locals;const j=t.p+"images/c51f08dd7631788bb763.svg",Z=t.p+"images/172dd62834686206807d.svg",D=t.p+"images/2c7dee90aec26a4ab0f9.svg",q=t.p+"images/92158d605c54a6aef63e.svg",M=t.p+"images/5b1f5a18664ddae6eb87.svg",L=t.p+"images/af20980ebf0d3eed9966.svg",P=t.p+"images/92158d605c54a6aef63e.svg",Y=t.p+"images/3a5eb44c7003a752e879.svg",F=t.p+"images/721ab9734afa31e4194e.svg";function R(e){function n(e,n,t){return S("button",null,["svgContainer"],null,[T(e,n,t,null)])}return{createSideMenu:function(){function t(e,n,t){let r=S("p",null,null,n,null);return S("div",null,t,null,[e,r])}let r=S("div",null,["top-div"],null,[t(n(L,"today icon",["svg-today"]),"Today",["box-today"]),t(n(P,"upcoming icon",["svg-upcoming"]),"Upcoming",["box-upcoming"])]),o=S("h2",null,["projects-header2"],"Projects",null),i=S("div",null,["projects-header"],null,[o,n(D,"Add project",["svg-add-project"])]),a=S("div",null,["bot-div"],null,[t(n(Y,"House icon",["svg-house"]),"Home",["box-house"]),t(n(F,"work icon",["svg-work"]),"Work",["box-work"])]),l=S("div",null,["sideMenu"],null,[r,i,a]);e.appendChild(l)},toggleSideMenu:function(){document.querySelector(".sideMenu").toggleAttribute("data-open")},createPage:function(){e.appendChild(S("div","page",null,null,null))},ShowHome:function(){},ShowUpcoming:function(){},ShowProject:function(e){}}}function U(e){function n(e){e.childNodes.forEach((e=>{"cancel"==e.id?e.addEventListener("click",(()=>{i()})):"clear"==e.id||"submit"==e.id&&e.addEventListener("click",(e=>{e.preventDefault(),console.log("Page should not refresh!")}))}))}function t(){let e=S("button","cancel",null,"Cancel",null);e.setAttribute("type","button");let n=S("button","clear",null,"Clear",null);n.setAttribute("type","reset");let t=S("button","submit",null,"Submit",null);return t.setAttribute("type","submit"),S("div",null,["btns"],null,[e,n,t])}function r(e,n,t,r,o,i){let a=S("label",null,null,o,null);a.setAttribute("for",n);let l=S(e,n,null,null,i);return r&&l.toggleAttribute("required"),t&&l.setAttribute("type",t),S("div",null,[n],null,[a,l])}function o(e){let n=S("option",null,null,`${e.charAt(0).toUpperCase()}${e.slice(1)}`,null);return n.setAttribute("value",e),"low"==e&&n.toggleAttribute("selected"),n}function i(){e.innerHTML="",e.classList.remove("form-todo"),e.classList.remove("form-project")}return{displayToDo:function(){e.className="form-todo",function(){e.appendChild(S("h2",null,["form-header"],"Add a new todo",null));let i=t();n(i);let a=S("form",null,null,null,[r("input","title","text",!0,"Title:",null),r("input","project","text",!0,"Project:",null),r("textarea","details",null,!1,"Details:",null),r("input","dueDate","date",!1,"Due Date:",null),r("select","priority",null,!1,"Priority:",[o("low"),o("medium"),o("high")]),i]);e.appendChild(a)}()},displayProject:function(){e.className="form-project",function(){e.appendChild(S("h2",null,["form-header"],"Add a new Project",null));let o=t();n(o);let i=S("form",null,null,null,[r("input","project","text",!0,"Project:",null),o]);e.appendChild(i)}()},remove:i}}function z(){let e=I(),n=R();return{addListners:function(){document.querySelector(".svg-hamburger").parentElement.addEventListener("click",(()=>{n.toggleSideMenu()})),document.querySelector(".svg-home").parentElement.addEventListener("click",(()=>{alert("This feature is not yet Implemented")})),document.querySelector(".svg-add").parentElement.addEventListener("click",(()=>{let e=U(document.querySelector("#page"));e.remove(),e.displayToDo()})),document.querySelector(".svg-calendar-header").parentElement.addEventListener("click",(()=>{alert("This feature is not yet Implemented")})),document.querySelector(".svg-colorPallete").parentElement.addEventListener("click",(()=>{e.toggleThemeCard()})),[...document.querySelectorAll(".select-theme input")].forEach((n=>{n.addEventListener("click",(n=>{e.updateTheme(n.target.value),e.toggleThemeCard()}))})),document.querySelector(".box-today").addEventListener("click",(()=>{alert("This feature is not yet Implemented")})),document.querySelector(".box-upcoming").addEventListener("click",(()=>{alert("This feature is not yet Implemented")})),document.querySelector(".projects-header").addEventListener("click",(()=>{let e=U(document.querySelector("#page"));e.remove(),e.displayProject(),n.toggleSideMenu()})),[...document.querySelector(".bot-div").querySelectorAll('[class^="box-"]')].forEach((e=>{!function(e){e.addEventListener("click",(()=>{console.log(e.className.slice(4)),alert("This feature is not yet Implemented")}))}(e)}))}}}class O{constructor(e,n,t,r,o,i){this.title=e,this.details=t,this.project=n,this.dueDate=r,this.priority=o,this.done=i}}const W=t.p+"images/3ea4cf483224d228ffe4.svg",N=t.p+"images/b46110e5beab591b0e63.svg";function X(e){let n=[new O("a","home","this is a test project","18-09-2023","low",!1),new O("b","home","this is a test project","18-09-2023","medium",!1),new O("c","home","this is a test project","18-09-2023","high",!0),new O("d","home","this is a test project","19-09-2023","low",!0),new O("e","home","this is a test project","27-09-2023","high",!1)];function t(e,n,t){return S("button",null,["svgContainer"],null,[T(e,n,t,null)])}return{display:function(){e.classList.add("today"),n.forEach((n=>{"18-09-2023"==n.dueDate&&e.appendChild(function(e){let n=S("h2",null,["task-header"],e.title,null),r=S("p",null,["task-date"],"today",null),o=S("div",null,["task-priority"],null,null);o.classList.add(`${e.priority}`);let i=S("button",null,["svgContainer"],null,[o]),a=t(W,"edit icon",["svg-edit"]),l=t(N,"delete icon",["svg-delete"]),A=S("div",null,["task-left"],null,[n,r]),s=S("div",null,["task-right"],null,[i,a,l]),c=S("div",null,["task"],null,[A,s]);return e.done&&c.classList.add("done"),c}(n))}))},remove:function(){e.innerHTML="",e.classList.remove("today")}}}(()=>{const e=document.querySelector(".header"),n=document.querySelector(".main"),t=document.querySelector(".footer");let r=function(e){let n=[r(j,"hamburger icon",["svg-hamburger"]),r(Z,"home icon",["svg-home"])],t=[r(D,"add icon",["svg-add"]),r(q,"calendar icon",["svg-calendar-header"]),r(M,"theme icon",["svg-colorPallete"])];function r(e,n,t){return S("button",null,["svgContainer"],null,[T(e,n,t,null)])}return{display:function(){const r=S("div",null,["nav-left"],null,null);n.forEach((e=>{r.appendChild(e)}));const o=S("div",null,["nav-right"],null,null);t.forEach((e=>{o.appendChild(e)})),e.appendChild(r),e.appendChild(o)},remove:function(){}}}(e),o=I(),i=function(e){return{display:function(){e.innerHTML='<p>Copyright &copy;<script>document.write(new Date().getFullYear());<\/script>argon-3467<a href="https://github.com/argon-3467"><i class="fa-brands fa-github"></i></a></p>'},remove:function(){document.querySelector(".footer").remove()}}}(t),a=R(n),l=z();r.display(),a.createSideMenu(),a.createPage(),X(document.getElementById("page")).display(),o.addThemesCard(),i.display(),o.updateTheme("system"),l.addListners()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,